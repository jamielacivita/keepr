ToDos
=====
[ ] Create Remote Repository
[ ] Should be able to display public keeper elements without logging in?
[ ] Need forgot password functionality?
[ ] Where do you go if you click "I'll signe up later, just browsing for now."
OQ: What form elements are needed for regristration?

--------------------------------------------------------------------------------------------------------
OQ: What is the workflow process for regristration?
1. User navigates to regristration page.
2. User fills out regristration form.
    name: { type: String, required: true },
    email: { type: String, required: true, unique: true, dropDups: true },
    password: { type: String, required: true }
3. User submits the form (prevent default)
    <button type="submit" name="action" @click.prevent="logIn(admin.email, pWord)">Submit</button>
4. A coponent local method is run to create a user object from the form and then run a method in the store.


5. In the store the method makes an axios post (to the base URL) is made to submit the body to the database. 

ToDo : need to to in-form validation.
ToDo : need to handle error condition 11000 (duplicate key in DB - happens when user submits same information twice.)

5. User is taken to the login page to actually sign in.
    [] display a message indicating that regristration was successful ... delay ... to login page.

OQ: What happens if you try to register as an existing user but with a different password?

OQ: How do we verify the user is logged in with full privlages?
------------------------------------------------------------------------------------------------------------


What are we using axios for? (Need to review how this works, exactly.)

OQ: How do we delete users?




=======================================
Goal: Users can see all public keeps.
=======================================
Connecting to Database via command line
---------------------------------------
At terminal: 
mongo ds056789.mlab.com:56789/codeworks -u student -p CodeWorksStudent
> use codeworks // switches db.to codeworks database.
db.users.find() --> produces a list of users.
db.keeps.find() --> produces a list of keeps.
show collections --> gives a list of collections.



















